/*
 *  Filename	: ExploitGroup.h
 *  Author		: Kuba Sejdak
 *  Created on	: 11-07-2013
 */

#include "ExploitGroup.h"

#include <vector>
#include <memory>

#include <core/ExploitSample.h>

using namespace std;

void ExploitGroup::add(ExploitSampleHandle sample, int resemblence)
{
	m_samples.push_back(make_pair(sample, resemblence));
}

void ExploitGroup::remove(ExploitSampleHandle sample)
{
	GroupSamples::iterator it;
    for(it = m_samples.begin(); it != m_samples.end(); ++it) {
		if(it->first->info()->name() == sample->info()->name() && it->first->info()->extractedFrom() == sample->info()->extractedFrom()) {
            m_samples.erase(it);
            break;
        }
    }
}

ExploitSampleHandle ExploitGroup::get(int position)
{
	return m_samples[position].first;
}

int ExploitGroup::resemblence(int position)
{
	return m_samples[position].second;
}

int ExploitGroup::size()
{
    return m_samples.size();
}
